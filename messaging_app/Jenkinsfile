pipeline {
    agent any
    environment {
        // IDs must match the credentials created in Jenkins
        GITHUB_CREDS = 'github-token'
        DOCKER_CREDS = 'dockerhub-creds'
        // ðŸš¨ CHANGE THESE USERNAMES ðŸš¨
        REPO_URL = 'https://github.com/diaamohammad/alx-backend-python.git'
        DOCKER_IMAGE_NAME = 'diaaalsemary5/messaging-app'
    }
    stages {
        // === Stage 1: Checkout Code ===
        stage('1. Checkout Code') {
            steps {
                git url: REPO_URL, credentialsId: GITHUB_CREDS, branch: 'main'
            }
        }
        
        // === Stage 2: Run Tests (pytest) ===
        stage('2. Run Tests (pytest)') {
            steps {
                dir('messaging_app') {
                    // âœ… Ø§Ù„Ø­Ù„ Ø§Ù„Ù†Ù‡Ø§Ø¦ÙŠ: ØªØ«Ø¨ÙŠØª Ø¨Ø§ÙŠØ«ÙˆÙ† ÙŠØ¯ÙˆÙŠØ§Ù‹ Ø¨Ø§Ø³ØªØ®Ø¯Ø§Ù… sudo/apt-get Ù„Ø­Ù„ Ù…Ø´ÙƒÙ„Ø© Ø§Ù„ØµÙ„Ø§Ø­ÙŠØ§Øª Ùˆ pip
                    sh '''
                        echo "Installing Python dependencies and running tests..."
                        sudo apt-get update
                        sudo apt-get install -y python3-pip python3-dev libmysqlclient-dev
                        
                        pip3 install -r requirements.txt
                        pip3 install pytest coverage
                        
                        pytest --junitxml=test-report.xml || true
                    '''
                }
            }
            post {
                always {
                    junit 'messaging_app/test-report.xml'
                }
            }
        }
        
        // === Stage 3: Build Docker Image (Ø§Ù„Ù…Ù‡Ù…Ø© 1) ===
        stage('3. Build Docker Image') {
            steps {
                dir('messaging_app') {
                    script {
                        docker.build("${DOCKER_IMAGE_NAME}:${env.BUILD_NUMBER}", ".")
                    }
                }
            }
        }
        
        // === Stage 4: Push to Docker Hub (Ø§Ù„Ù…Ù‡Ù…Ø© 1) ===
        stage('4. Push to Docker Hub') {
            steps {
                script {
                    docker.withRegistry('https://registry.hub.docker.com', DOCKER_CREDS) {
                        docker.image("${DOCKER_IMAGE_NAME}:${env.BUILD_NUMBER}").push()
                        docker.image("${DOCKER_IMAGE_NAME}:latest").push()
                    }
                }
            }
        }
    }
}
